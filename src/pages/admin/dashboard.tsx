"use client"
import UpdateBookingMenuModal from '@/components/UpdateBookingMenuModal'
import { MenuItem } from '@/model/MenuItem'
import { useBookingMenuStore } from '@/stores/bookingMenuStore'
import { SettingsIcon } from '@chakra-ui/icons'
import { Text, Button, Center, Heading, IconButton, Table, TableContainer, Tbody, Td, Th, Thead, Tr, useDisclosure, HStack, useToast } from '@chakra-ui/react'
import { useRouter } from 'next/router'

import React, { useEffect, useState } from 'react'
import MenuItems from './menuItems'
import Head from 'next/head'
import { useBookingMenuQuery } from '@/hooks/menuItemQuery'
import { updateBookingController, deleteBookingController } from '@/controller/admin_api'

type Order = {
    count: number,
    itemId: string
}

export type Booking = {
    id: string,
    firstName: string,
    lastName: string,
    phoneNumber: string,
    date: number,
    totalPrice: number,
    orders: Order[],
}

export type BookingMenu = {
    booking: Booking,
    menuItems: MenuItem[]
}

const Bookings = () => {
    const router = useRouter()
    const bookingMenus = useBookingMenuQuery()
    const { isOpen, onOpen, onClose } = useDisclosure()

    const bookings = bookingMenus?.map(bookingMenu => bookingMenu.booking)
    // const menuItems = bookingMenus?.map(bookingMenu => bookingMenu.menuItems)

    const { bookingMenu, setBookingMenu, removeBookingMenu } = useBookingMenuStore()

    const openModal = (bookingMenuId: string) => {
        const selected = bookingMenus?.find(bookingMenu => bookingMenu.booking?.id == bookingMenuId)

        if (selected) {
            setBookingMenu(selected)
            onOpen()
        }
    }

    const closeModal = () => {
        removeBookingMenu()
        onClose()
    }

    const [bookingPage, setBookingPage] = useState<boolean>(true)

    function handleRoute() {
        setBookingPage(prev => !prev)
    }

    const [login, setLogin] = useState<boolean>()


    useEffect(() => {
        if (typeof window !== 'undefined') {
            const token = localStorage.getItem('jwtToken');

            if (token == null) {
                router.push("/admin/login")
            } else {
                setLogin(true)
            }
            console.log(login)
        }
    }, [login]);


    async function Logout() {
        localStorage.removeItem("jwtToken")
        setLogin(false)
    }




    return (
        <>
            <Head>
                <title>Admin Dashboard - Restaurant App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>

                <Center bgColor='primary' py="3" justifyContent='space-between' >
                    <Heading fontFamily='mono' mx='10px' letterSpacing='3px' color='white' fontSize={{ base: "24px", md: "40px", lg: "56px" }}>
                        Admin Dashboard
                    </Heading>
                    <HStack mr='8px'>
                        <Button
                            size={{ base: 'xs', sm: 'sm', md: 'lg' }}
                            onClick={handleRoute}
                            color='primary'
                            bgColor='white'
                            _hover={{
                                bgColor: 'tertiary',
                            }}
                            isDisabled={!bookingPage ? false : true}
                        >Bookings</Button>
                        <Button
                            size={{ base: 'xs', sm: 'sm', md: 'lg' }}
                            onClick={handleRoute}
                            color='primary'
                            bgColor='white'
                            _hover={{
                                bgColor: 'tertiary',
                            }}
                            isDisabled={bookingPage ? false : true}
                        >Menu Items</Button>
                        <Button
                            size={{ base: 'xs', sm: 'sm', md: 'lg' }}
                            onClick={Logout}
                            color='primary'
                            bgColor='white'
                            _hover={{
                                bgColor: 'tertiary',
                            }}
                        >Logout</Button>
                    </HStack>
                </Center>
                {
                    bookingPage ?
                        <>
                            <Text fontFamily='mono' color='primary' px='20px' my='10px' letterSpacing='3px'
                                fontSize={{ base: "xl", md: "4xl", lg: "4xl" }}
                            >Booking List</Text>
                            <TableContainer>
                                <Table size='sm'
                                    fontFamily='mono'
                                    mx='10px'
                                    letterSpacing='1px'
                                    fontSize={{ base: "24px", md: "40px", lg: "56px" }}
                                >
                                    <Thead>
                                        <Tr >
                                            <Th fontFamily='mono'
                                                mx='10px'
                                                letterSpacing='1px'
                                                color='primary'>Customer Name</Th>
                                            <Th fontFamily='mono'
                                                mx='10px'
                                                letterSpacing='1px'
                                                color='primary'>Phone Number</Th>
                                            <Th fontFamily='mono'
                                                mx='10px'
                                                letterSpacing='1px'
                                                color='primary'>Total Price</Th>
                                            <Th fontFamily='mono'
                                                mx='10px'
                                                letterSpacing='1px'
                                                color='primary'>Order Items</Th>
                                            <Th fontFamily='mono'
                                                mx='10px'
                                                letterSpacing='1px'
                                                color='primary'>More Info</Th>
                                        </Tr>
                                    </Thead>
                                    <Tbody>
                                        {
                                            bookings?.map(booking => {
                                                return (
                                                    <>
                                                        <Tr key={booking?.id}>
                                                            <Td>{booking?.firstName} {booking?.lastName}</Td>
                                                            <Td>{booking?.phoneNumber}</Td>
                                                            <Td>${booking?.totalPrice}</Td>
                                                            <Td>{booking?.orders.length}</Td>
                                                            <Td>
                                                                <IconButton
                                                                    color='primary'
                                                                    aria-label='Search database'
                                                                    size='sm'
                                                                    onClick={() => openModal(booking?.id)}
                                                                    icon={<SettingsIcon />}
                                                                />

                                                            </Td>
                                                        </Tr>
                                                    </>
                                                )
                                            })
                                        }
                                        <UpdateBookingMenuModal
                                            isOpen={isOpen}
                                            onClose={closeModal}
                                            onOpen={onOpen}
                                            bookingMenu={bookingMenu} 
                                        />
                                    </Tbody>
                                </Table>
                            </TableContainer>
                        </>
                        :
                        <>
                            <MenuItems />
                        </>
                }
            </main>

        </>
    )
}

export default Bookings
